
scientific-papers: classpath:scientific_papers

backend.url: https://localhost:${server.port}${server.servlet.context-path}
frontend.url: https://localhost:4200

registration.confirmation.url: https://localhost:4200/confirm-registration

ca-url: https://localhost:8443/pki/certificate/create
my-url: ${backend.url}/certificate/send-request

ftp:
  host: localhost
  port: 2121
  passive-ports:
  max-login: 0
  max-threads: 0
  username: science_center_ftp
  password: science_center_ftp_pass
  home-dir: classpath:stores
  #home-dir: classpath:aaa

token:
  header: X-Auth-Token
  secret: myXAuthSecret
  expiration: 1800000

proxy-server.url: https://localhost:8762

pki-microservice:
  create-certificate: ${proxy-server.url}/pki-microservice/certificate/create

payment-microservice:
  urls:
    frontend:
      choose-payment: https://localhost:4201/choose-payment #${proxy-server.url}/payment-microservice/payment/choose-type
    backend:
      form-fields-for-payment-types: ${proxy-server.url}/payment-microservice/payment/form-fields-for-payment-types
      registration:
        single: ${proxy-server.url}/payment-microservice/users/registration
        all: ${proxy-server.url}/payment-microservice/users/registration-all
      pay: ${proxy-server.url}/payment-microservice/payment/pay
      transactions: ${proxy-server.url}/payment-microservice/payment/transactions
      login: ${proxy-server.url}/payment-microservice/users/login
#ovo je zapravo proxy server url, pa ce biti redeirektovano na payment-microservice (https://localhost:8083/payment-microservice)
#payment-concentrator.url=https://localhost:8083/payment-microservice

server:
  servlet.context-path: /${spring.application.name}
  port: 8081
  ssl:
    key-store: classpath:stores/keystore.jks # https://www.baeldung.com/properties-with-spring#7-properties-from-command-line-arguments
    key-store-password: key_store_pass
    key-store-type: JKS
    key-alias: science_center_1
    trust-store: classpath:stores/truststore.jks
    trust-store-password: trust_store_pass
    trust-store-type: JKS
    protocol: TLS
    enabled: true
    enabled-protocols: TLSv1.2
    ciphers: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA,TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
    # Za definisanje ovoga, treba prethodno iskoristi kod u PkiApplication klasi, koja izlistava sve podrzane
    # chipers u Javi instaliranoj na nasem racunaru
    # Kod je pronadjen na: https://stackoverflow.com/questions/48934210/java-ssl-error-cannot-support-tls-ecdhe-rsa-with-aes-256-gcm-sha384
    client-auth: want
    # for two way authentication, use value: need





spring:
  application.name: science_center_1
  #Spring DataSource
  datasource:
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:myDb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password:
    #korisno ako je konekcija dugo u idle stanju
    testWhileIdle: true
    validationQuery: SELECT 1
    #Bez ovoga nece da izvrsi insert naredbe iz data.sql fajla koji se nalazi u /main/resources
    initialization-mode: always
    #JPA-Hibernate - prikazuje SQL upite
    jpa:
      show-sql: true
      hibernate:
        #kreira tabele na osnovu anotacija @Entity svaki put kad se pokrene aplikacija
        ddl-auto: create #create-drop
        #bira najbolje konvencije imenovanja za tabele i polja u bazi
        naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
    #optimizacija za h2 upite
    properties.hibernate.dialect: org.hibernate.dialect.H2Dialect
    #konekcija na bazu je jdbc:h2:mem:myDb
  h2.console:
    #Ukljucivanje konzole
    enabled: true
    #Putanja na kojoj ce konzola biti dostupna
    #dodaje se na localhost:${port} ili na localhost:${port}/${server.servlet.context-path}
    path: /h2-console
  #ZA MAIL
  #---------
  mail:
    host: smtp.gmail.com
    username: upisi pravu email adresu
    password: upisi pravi password
    port: 587
    properties.mail.smtp.starttls.enable: true



camunda:
      bpm:
        admin-user:
                  id: demo
                  password: demo
                  firstName: Demo
        filter.create: All tasks
        webapp.index-redirect-enabled: false


spring.servlet.multipart.max-file-size: 100MB
spring.servlet.multipart.max-request-size: 100MB
# multipart.maxFileSize: 20Kb
# multipart.maxRequestSize: 1Mb
